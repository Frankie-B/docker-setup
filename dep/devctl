#!/bin/bash
    
command_exists () {
    type "$1" &> /dev/null ;
}

usage () {

cat <<EOF
Usage: $0 [options]
All commands are executed in context of installdirectory/docker
Options:
                        | Show this help
up                      | Create and daemonize all containers in docker-compose file
restart [containers]    | Restart all built containers
stop [containers]       | Stop all built containers.
start [containers]      | Start all built containers
status                  | Shows running status of all containers managed by this docker-compose file (ps -a)
build                   | Build all containers in docker-compose file
hostversions            | Shows which installed projects run on which PHP version
installdir              | Shows current install directory
sonarqube               | Creates sonarqube and postgres instances
EOF
}

get_installdir() {
    echo "installdirectory/docker"
}

get_versions() {
    INSTALLPATH=installdirectory/data/shared/sites
    for path in $INSTALLPATH/* ; do
        if ! command_exists jq ; then
            echo "Need jq to run this, please use sudo apt install jq"
            exit 1
        fi
        if [ -d $path/.siteconfig ]; then
            VHOST=$(basename $path)
            if [ -f $path/.siteconfig/config.json ] ; then
                PHPVERSION=$(jq -r .php_version "$path/.siteconfig/config.json")
            elif [ -f $path/.siteconfig/config.json.example ]; then
                PHPVERSION=$(jq -r .php_version "$path/.siteconfig/config.json.example")
            fi
            echo "$VHOST -> PHP $PHPVERSION"
        fi
    done
}

cd installdirectory/docker
case "$1" in
    up)
        docker-compose up -d
        ;;
    restart)
        docker-compose restart ${@:2}
        ;;
    stop)
        docker-compose stop ${@:2}
        ;;
    start)
        docker-compose start ${@:2}
        ;;
    status)
        docker-compose ps -a
        ;;
    build)
        docker-compose build
        ;;
    hostversions)
        get_versions
        ;;
    installdir)
        get_installdir
        ;;
    sonarqube)
        docker-compose -f sonarqube.yml up -d
	;;
    *)
        usage
        exit 1
esac

exit 0
