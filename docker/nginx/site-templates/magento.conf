server {
    listen 80;
    listen 443 ssl http2;

    ssl_certificate     /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    set $MAGE_MODE developer;
    set $SITE_ROOT /data/shared/sites/##SITEBASENAME##;

    server_name  ##SITEBASENAME##.##XCOMUSER####PROJECTSLUG##;

    root  $SITE_ROOT;
    index index.php;


    ##
    # redirect to www
    ##
    #if ($host !~* ^www\.) {
    #    rewrite ^(.*)$ http://www.$host$1 permanent;
    #}

    ##
    # dont log robots.txt requests
    ##
    location /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
 
    ## These locations would be hidden by .htaccess normally
    location ^~ /app/                { deny all; }
    location ^~ /includes/           { deny all; }
    location ^~ /lib/                { deny all; }
    location ^~ /media/downloadable/ { deny all; }
    location ^~ /pkginfo/            { deny all; }
    location ^~ /report/config.xml   { deny all; }
    location ^~ /var/                { deny all; }
    location /var/export/            { deny all; }
	# deny htaccess files
    location ~ /\. {
        deny  all;
        access_log off;
        log_not_found off;
    }

    ##
    # Rewrite for versioned CSS+JS via filemtime
    ##
    location ~* ^.+\.(css|js)$ {
        rewrite ^(.+)\.(\d+)\.(css|js)$ $1.$3 last;
        expires 31536000s;
        access_log off;
        log_not_found off;
        add_header Pragma public;
        add_header Cache-Control "max-age=31536000, public";
    }
    ##
    # Aggressive caching for static files
    # If you alter static files often, please use 
    # add_header Cache-Control "max-age=31536000, public, must-revalidate, proxy-revalidate";
    ##
    location ~* \.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|eot|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|odb|odc|odf|odg|odp|ods|odt|ogg|ogv|otf|pdf|png|pot|pps|ppt|pptx|ra|ram|svg|svgz|swf|tar|t?gz|tif|tiff|ttf|wav|webm|wma|woff|wri|xla|xls|xlsx|xlt|xlw|zip)$ {
        expires 31536000s;
        access_log off;
        log_not_found off;
        add_header Pragma public;
        add_header Cache-Control "max-age=31536000, public";
    }
	
    location / {
        try_files /maintenance.html $uri $uri/ @handler; ## If missing pass the URI to Magento's front handler
        expires 30d; ## Assume all files are cachable
    }
    location @handler { ## Magento uses a common front handler
        rewrite / /index.php;
    }
    location ~ .php/ { ## Forward paths like /js/index.php/x.js to relevant handler
        rewrite ^(.*.php)/ $1 last;
    }
    
    ##
    # pass the PHP scripts to FastCGI server listening at unix:/tmp/php5-fpm.sock
    ##
    location ~ \.php$ { 
        fastcgi_param PHP_FLAG "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_param PHP_VALUE "memory_limit=2048M \n max_execution_time=600";
        fastcgi_read_timeout 300s; 
        fastcgi_connect_timeout 300s;

        fastcgi_split_path_info ^(.+\.php)(/.+)$; 
        include fastcgi.conf; 
        
        fastcgi_intercept_errors on;
        fastcgi_param XCOM_SERVERTYPE "dev";
        fastcgi_param XCOM_SERVERUSER "##XCOMUSER##";
	    fastcgi_param MAGE_MODE $MAGE_MODE;
        fastcgi_pass unix:/data/shared/sockets/php##USE_PHPVERSION##-fpm.sock;
    }
    
    rewrite ^/minify/([0-9]+)(/.*.(js|css))$ /lib/minify/m.php?f=$2&d=$1 last;
    rewrite ^/skin/m/([0-9]+)(/.*.(js|css))$ /lib/minify/m.php?f=$2&d=$1 last;
  
    error_log /data/shared/sites/##SITEBASENAME##/logs/error.nginx.log;
    access_log /data/shared/sites/##SITEBASENAME##/logs/access.nginx.log;
}
