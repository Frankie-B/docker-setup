#!/bin/bash

if [ "$EUID" -ne 0 ]; then
  echo "Please run as root"
  exit
fi

if [ ! -f "/etc/xcomuser" ]; then
  echo "Please create /etc/xcomuser file"
  exit
fi

apt-get update
apt-get -y upgrade
DEBIAN_FRONTEND=noninteractive apt-get -y -q install curl git parted xfsprogs sudo ntpdate software-properties-common apt-transport-https
apt-get -y remove exim4 exim4-base exim4-config exim4-daemon-light && apt-get -y purge exim4 exim4-base exim4-config exim4-daemon-light && apt-get -y autoremove

if [[ $(docker images -q) ]]; then
  docker kill $(docker ps -q)
  docker rm $(docker ps -a -q)
  docker rmi $(docker images -q)
fi

if [ -f /usr/bin/docker ]; then
  docker -v | grep '\-ce'
  if [ $? != 0 ]; then
    /etc/init.d/docker stop
    rm -Rf /data/docker
    apt-get -y remove docker.io && apt-get -y purge docker.io && apt-get autoremove
  fi
fi

if [ ! -x /usr/bin/docker ]; then
  add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/debian \
   $(lsb_release -cs) \
   stable"
  curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
  apt-get update && apt-get -y install docker-ce

  /etc/init.d/docker stop
  rm -Rf /data/docker
  mkdir -p /data/docker
  rm -Rf /var/lib/docker
  ln -s /data/docker /var/lib/docker
  /etc/init.d/docker start
fi

/usr/sbin/ntpdate time.windows.com

crontab -l > /tmp/crons
sed -i '/ntpdate/d' /tmp/crons
echo "0 * * * * /usr/sbin/ntpdate time.windows.com" >> /tmp/crons
crontab /tmp/crons

if ! grep -q '^web:' /etc/passwd; then
  useradd -u 1100 -s /bin/bash web
fi

if ! grep -q '^xcom:' /etc/sudoers; then
  echo 'xcom ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
fi

if ! getent group docker | grep -q '\xcom\b'; then
  gpasswd -a xcom docker
fi

if ! grep -q "Europe/Amsterdam"  /etc/timezone; then
  echo "Europe/Amsterdam" > /etc/timezone
  dpkg-reconfigure -f noninteractive tzdata
fi

if [ ! -d "/data/shared/sites" ]; then
  mkdir -p /data/shared/sites
  chown -R web.web /data/shared/sites
fi

if [ ! -d "/data/shared/sockets" ]; then
  mkdir -p /data/shared/sockets
fi

if [ ! -d "/data/home" ]; then
  mkdir -p /data/home
fi

if [ ! -d "/data/home/php54" ]; then
  cp -R /etc/skel /data/home/php54
fi

if [ ! -d "/data/home/php56" ]; then
  cp -R /etc/skel /data/home/php56
fi

if [ ! -d "/data/home/php70" ]; then
  cp -R /etc/skel /data/home/php70
fi

if [ ! -d "/data/home/php71" ]; then
  cp -R /etc/skel /data/home/php71
fi

if [ ! -d "/data/home/php72" ]; then
  cp -R /etc/skel /data/home/php72
fi

if [ ! -d "/data/home/php73" ]; then
  cp -R /etc/skel /data/home/php73
fi

chown -R web.web /data/home/*

if ! grep -q "export TERM=xterm" /data/home/php54/.bashrc; then
  echo "export TERM=xterm" >> /data/home/php54/.bashrc
fi

if ! grep -q "export TERM=xterm" /data/home/php56/.bashrc; then
  echo "export TERM=xterm" >> /data/home/php56/.bashrc
fi

if ! grep -q "export TERM=xterm" /data/home/php70/.bashrc; then
  echo "export TERM=xterm" >> /data/home/php70/.bashrc
fi

if ! grep -q "export TERM=xterm" /data/home/php71/.bashrc; then
  echo "export TERM=xterm" >> /data/home/php71/.bashrc
fi

if ! grep -q "export TERM=xterm" /data/home/php72/.bashrc; then
  echo "export TERM=xterm" >> /data/home/php72/.bashrc
fi

if ! grep -q "export TERM=xterm" /data/home/php73/.bashrc; then
  echo "export TERM=xterm" >> /data/home/php73/.bashrc
fi


if ! grep -q "\$HOME/bin" /data/home/php54/.bashrc; then
  echo "PATH=\$HOME/bin:\$PATH" >> /data/home/php54/.bashrc
fi

if ! grep -q "\$HOME/bin" /data/home/php56/.bashrc; then
  echo "PATH=\$HOME/bin:\$PATH" >> /data/home/php56/.bashrc
fi

if ! grep -q "\$HOME/bin" /data/home/php70/.bashrc; then
  echo "PATH=\$HOME/bin:\$PATH" >> /data/home/php70/.bashrc
fi

if ! grep -q "\$HOME/bin" /data/home/php71/.bashrc; then
  echo "PATH=\$HOME/bin:\$PATH" >> /data/home/php71/.bashrc
fi

if ! grep -q "\$HOME/bin" /data/home/php72/.bashrc; then
  echo "PATH=\$HOME/bin:\$PATH" >> /data/home/php72/.bashrc
fi

if ! grep -q "\$HOME/bin" /data/home/php73/.bashrc; then
  echo "PATH=\$HOME/bin:\$PATH" >> /data/home/php73/.bashrc
fi

if [ ! -f "/usr/local/bin/docker-compose" ]; then
  curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose
fi


cat <<EOT > /usr/local/bin/enter
#!/bin/bash

docker exec -it "docker_\$@_1" /bin/bash
EOT

chmod +x /usr/local/bin/enter

if [ ! -d "/docker" ]; then
  mkdir /docker
  git clone https://xcom-ro:xco5991@bitbucket.org/X-com/devserver.git /docker
fi

chown -R xcom.xcom /docker

rm /data/shared/sites/*/.siteconfig/*example*
