#!/bin/bash

if [ "$EUID" -ne 0 ]; then
  echo "Please run as root, use sudo"
  exit
fi

if [ ! -f "/etc/xcomuser" ]; then
  echo "Creating /etc/xcomuser file"
  echo $SUDO_USER > /etc/xcomuser
  #echo "Please create /etc/xcomuser file"
  #exit
fi

echo "Please enter the directory you want to install base to (without trailing slash)"
read installdir
echo "Installdir set to $installdir"

if [ ! -d $installdir ]; then
  mkdir -p $installdir
fi

echo "Running updates"
apt -qq update 
# apt -qq -y upgrade // a bit heavy, especially if there are packages you don't want to upgrade
# install docker dependencies
DEBIAN_FRONTEND=noninteractive apt -y -qq install curl git software-properties-common apt-transport-https gnupg-agent ca-certificates
# removed parted, xfsprogs, ntpdate
# exim does not come with ubuntu default install
#apt -y purge exim4 exim4-base exim4-config exim4-daemon-light && apt-get -y autoremove

if [ ! -f /usr/bin/docker ] && [ ! -f /usr/local/bin/docker-compose ]; then
  echo "If you have not downloaded docker and docker-compose yet, please do so first."
  echo "https://docs.docker.com/install/"
  echo "https://docs.docker.com/compose/install/"
  exit
fi

if [ ! -f /usr/local/bin/enter ]; then
  cp dep/enter /usr/local/bin/enter
  chmod +x /usr/local/bin/enter
fi

if [ ! -d "$installdir/data/shared/sites" ]; then
  mkdir -p $installdir/data/shared/sites
  #chown -R web.web $installdir/data/shared/sites
fi

if [ ! -d "$installdir/data/shared/sockets" ]; then
  mkdir -p $installdir/data/shared/sockets
fi

if [ ! -d "$installdir/data/home" ]; then
  mkdir -p $installdir/data/home
fi

paths=( "php54" "php56" "php70" "php71" "php72" "php73")
for path in "${paths[@]}"
do :
  if [ ! -d "$installdir/data/home/$path" ]; then
    cp -R /etc/skel $installdir/data/home/$path
  fi
  if ! grep -q "export TERM=xterm" $installdir/data/home/$path/.bashrc; then
    echo "export TERM=xterm" >> $installdir/data/home/$path/.bashrc
  fi
  if ! grep -q "\$HOME/bin" $installdir/data/home/$path/.bashrc; then
    echo "PATH=\$HOME/bin:\$PATH" >> $installdir/data/home/$path/.bashrc
  fi
done

if [ ! -d "$installdir/docker" ]; then
  mkdir -p $installdir/docker
  cp -r ./docker/* $installdir/docker/
fi

# replace existing docker compose with new to update settings after a second install
cp ./docker/docker-compose.yml $installdir/docker/docker-compose.yml

read -p "Do you want docker containers to restart automatically? [y/N] " -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    sed -i -e 's/# restart: always/restart: always/g' $installdir/docker/docker-compose.yml
fi

if [ -f $installdir/docker/docker-compose.yml ]; then
  echo "Setting up correct values for docker-compose based on your given installdir"
  sed -i -e 's:installdirectory:'"$installdir"':g' $installdir/docker/docker-compose.yml
fi

chown -R $SUDO_USER:$SUDO_USER $installdir/data/home/*
chown -R $SUDO_USER:$SUDO_USER $installdir/data/shared/sites

# set max_map_count for sonarqube
sysctl -w vm.max_map_count=262144

echo "Installation prepared"
echo "1: Change directory to $installdir/docker"
echo "2: run docker-compose up -d"
